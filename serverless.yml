AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Create the FeedCreator Stack

Outputs:
  NodeFunctionName:
    Description: Name of Node Function
    Value: !Ref NodeLambda

Parameters:
  Stage:
    Type: String
    Default: dev
    AllowedValues:
    - dev
    - alpha
    - test
    - prod

  SecurityGroupIds:
    Type: List<AWS::EC2::SecurityGroup::Id>

  SubnetIds:
    Type: List<AWS::EC2::Subnet::Id>

  AWSEnvironment:
    Type: String
    Default: nonprod
    AllowedValues:
    - nonprod
    - prod

  ASPEnvironment:
    Type: String
    Default: dev
    AllowedValues:
    - dev
    - alpha
    - test
    - prod
    - local

Resources:
  NodeLambda:
    Type: AWS::Serverless::Function
    Properties:
      ImageConfig:
        Command:
        - index.init
      PackageType: Image
      ImageUri: !Sub "${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/feed.creator.backend:latest"
      Policies:
        - AWSLambdaFullAccess
      Environment:
        Variables:
          ASPNETCORE_ENVIRONMENT:
            Ref: ASPEnvironment
      VpcConfig:
        SecurityGroupIds:
          Ref: SecurityGroupIds
        SubnetIds:
          Ref: SubnetIds
      ReservedConcurrentExecutions: 5

  HttpApi:
    Type: 'AWS::ApiGatewayV2::Api'
    Properties:
      Name: "ErrorApi"
      ProtocolType: HTTP
      CorsConfiguration:
        AllowOrigins: 
          - "*"
  
  Authorizer:
    Type: 'AWS::ApiGatewayV2::Authorizer'
    DependsOn: HttpApi
    Properties:
      ApiId: !Ref HttpApi
      AuthorizerType: JWT
      JwtConfiguration:
        Audience: 
          - ""
        Issuer: ""
      AuthorizerUri: 
      IdentitySource: 
        - $request.header.Authorization
      Name: "ErrorServiceAuthorize"

  NodeIntegration:
    Type: 'AWS::ApiGatewayV2::Integration'
    DependsOn: HttpApi
    Properties:
      ApiId: !Ref HttpApi
      Description: Lambda Integration
      IntegrationType: AWS_PROXY
      IntegrationUri: !GetAtt NodeLambda.Arn
      IntegrationMethod: POST
      ConnectionType: INTERNET
      PayloadFormatVersion: "2.0"

  NodeRoute:
    Type: AWS::ApiGatewayV2::Route
    DependsOn: NodeIntegration
    Properties:
      ApiId: !Ref HttpApi
      RouteKey: 'POST /ErrorServiceNode'
      Target: !Join
        - /
        - - integrations
          - !Ref NodeIntegration
      AuthorizerId: !Ref Authorizer
      AuthorizationType: JWT


  NodeApiInvoke:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !GetAtt NodeLambda.Arn
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub 'arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${HttpApi}/*/ErrorServiceNode'
